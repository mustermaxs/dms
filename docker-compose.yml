version: '3.8'

services:
  api:
    build:
      context: ./REST
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    networks:
      - DMS-network
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ConnectionStrings__DefaultConnection: "Host=postgres;Database=DMSDB;Username=dmsadmin;Password=dmsadmin"
    depends_on:
      - postgres
  
  postgres:
    image: "postgres:13"
    environment:
      POSTGRES_USER: "dmsadmin"
      POSTGRES_PASSWORD: "dmsadmin"
      POSTGRES_DB: "DMSDB"
      DB_DATABASE_NAME: "DMSDB"
      DB_USERNAME: "dmsadmin"
      DB_PASSWORD: "dmsadmin"
      DB_DATA_LOCATION: "/var/lib/postgresql/data"
      UPLOAD_LOCATION: "/var/lib/postgresql/data"
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./psqldatabase:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - DMS-network

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:80"
  #   networks:
  #     - DMS-network

  minio:
    image: bitnami/minio:latest
    ports:
      - '9000:9000'
      - '9090:9090'
    networks:
      - DMS-network
    volumes:
      - 'minio_data:/data'
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_DEFAULT_BUCKETS=dmsbucket
#  admin:
#    image: adminer
#    restart: always
#    depends_on:
#      - postgres
#    ports:
#      - "8081:8080"

networks:
  DMS-network:
    driver: bridge

volumes:
  minio_data:
    driver: local