
services:
  api:
    build:
      context: ./REST
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    networks:
      - DMS-network
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ConnectionStrings__DefaultConnection: "Host=postgres;Database=DMSDB;Username=dmsadmin;Password=dmsadmin"
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
  
  postgres:
    image: "postgres:13"
    environment:
      POSTGRES_USER: "dmsadmin"
      POSTGRES_PASSWORD: "dmsadmin"
      POSTGRES_DB: "DMSDB"
      DB_DATABASE_NAME: "DMSDB"
      DB_USERNAME: "dmsadmin"
      DB_PASSWORD: "dmsadmin"
      DB_DATA_LOCATION: "/var/lib/postgresql/data"
      UPLOAD_LOCATION: "/var/lib/postgresql/data"
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./psqldatabase:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - DMS-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    networks:
      - DMS-network
    depends_on:
      - api


  minio:
    image: bitnami/minio:latest
    ports:
      - '9000:9000'
      - '9090:9090'
    networks:
      - DMS-network
    volumes:
      - 'minio_data:/data'
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_DEFAULT_BUCKETS=dmsbucket

  rabbitmq:
    image: rabbitmq:3.8-management
    hostname: "rabbitmq"
    ports:
      - "5672:5672"
      - "9093:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "dmsadmin"
      RABBITMQ_DEFAULT_PASS: "dmsadmin"
      RABBITMQ_DEFAULT_VHOST: "/"
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - DMS-network

  ocr:
    build:
      context: ./OcrService/OcrService
      dockerfile: Dockerfile
    ports:
      - "8082:80"
    networks:
      - DMS-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      elastic_search:
        condition: service_started

  elastic_search:
    image: elasticsearch:8.7.1
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
      - "xpack.security.enrollment.enabled=false"
    networks:
      - DMS-network

  kibana:
    image: kibana:8.7.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elastic_search:9200
      - ELASTICSEARCH_URL=http://elastic_search:9200
      - XPACK_SECURITY_ENABLED=false
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=d6c0e1498c1d6e2494caa27ef0796f6ee31baa7a4b4c929c84ce7b2f0a6c9b6a
      - XPACK_SECURITY_ENCRYPTIONKEY=fhjskloppd678ehkdfdlliverpoolfcynwa
      - XPACK_REPORTING_ENCRYPTIONKEY=lkjhgfdsa345678fhjk
      - XPACK_FLEET_ENABLED=false
      - XPACK_REPORTING_KIBANASERVER_HOSTNAME=localhost
    ports:
      - "5601:5601"
    depends_on:
      - elastic_search
    networks:
      - DMS-network
      
networks:
  DMS-network:
    driver: bridge

volumes:
  minio_data:
    driver: local
